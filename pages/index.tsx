import HomeNav from "@/Components/Nav/HomeNav";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Index.module.css";
import {IndexInfo} from "@/types";
import {getFirestore, collection, getDocs, Timestamp} from "firebase/firestore";
import {app} from "@/service/firebase";
import {useEffect, useState} from "react";

const dateFormatter = (date: Date) => {
  const dateType = new Date(date);
  const month = dateType.getMonth() + 1;
  const day = dateType.getDate();
  return {
    month: month,
    day: day,
  };
};

const getGuFormAddress = (address: string) => {
  const guIndex = address.indexOf("구");
  const seoulIndex = address.indexOf("서울시");

  if (guIndex === -1) {
    return null;
  }

  if (seoulIndex === -1) {
    return address.substring(0, guIndex + 1);
  }

  return address.substring(seoulIndex, guIndex + 1);
};

const convertToMoneyFormat = (num: number): string => {
  const quotient = Math.floor(num / 100000000);
  const remainder = num % 100000000;

  let result = "";

  if (quotient > 0) {
    result += `${quotient}억 `;
  }

  const tenThousandRemainder = Math.floor(remainder / 10000);

  if (tenThousandRemainder > 0) {
    result += `${tenThousandRemainder}만 `;
  }

  return result.trim();
};

export default function Home() {
  const [posts, setPosts] = useState<IndexInfo[]>([]);

  useEffect(() => {
    const db = getFirestore(app);
    const collectionRef = collection(db, "house_info");

    const fetchData = async () => {
      const querySnapshot = await getDocs(collectionRef);

      const newPosts: IndexInfo[] = querySnapshot.docs.map((doc) => {
        const data = doc.data();

        const deadlineAt =
          data.deadline_at instanceof Timestamp
            ? data.deadline_at.toDate()
            : new Date(data.deadline_at);

        return {
          id: doc.id,
          deadline_at: data.deadline_at,
          address: data.address,
          category: data.category,
          deposit: data.deposit,
          rent: data.rent,
          area: data.rent,
        };
      });

      setPosts(newPosts);
    };

    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>집패스</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <>
        <HomeNav />
        <div className={styles.container}>
          <div className="w-[88%] m-auto">
            <div className="my-9">
              <div className="text-xl font-bold">공고 리스트</div>
            </div>

            <ul className="space-y-5 h-full w-full">
              {posts.map((post) => (
                <li key={post.id}>
                  <Link
                    className="rounded-xl border border-none bg-[#F2F4F6] h-160 flex items-center"
                    href={`detail/${post.id}`}
                  >
                    <div className="rounded-lg w-24 h-32 bg-[#15AA2C] m-4 ">
                      <div className="flex flex-col justify-center items-center h-full">
                        <p className="font-semibold text-sm text-gray-200">
                          마감일
                        </p>
                        <p className="font-semibold text-3xl text-white">
                          {dateFormatter(post.deadline_at).month}월
                        </p>
                        <p className="font-semibold text-3xl text-white">
                          {dateFormatter(post.deadline_at).day}일
                        </p>
                      </div>
                    </div>
                    <div className="flex flex-col justify-start">
                      <p className="text-xl font-bold">당첨 확률</p>
                      <div className="pt-1.5">
                        <p className="text-base">
                          {getGuFormAddress(post.address)}
                        </p>
                        <p className="text-base">
                          보증금 {convertToMoneyFormat(post.deposit)}원
                        </p>
                        <p className="text-base">
                          월세 {convertToMoneyFormat(post.rent)}원
                        </p>
                        <p className="text-gray-500 text-sm">{post.category}</p>
                      </div>
                    </div>
                  </Link>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </>
    </>
  );
}
