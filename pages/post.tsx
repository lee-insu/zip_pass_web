import Head from "next/head";
import {getFirestore, collection, addDoc} from "firebase/firestore";
import {useState} from "react";
import {async} from "@firebase/util";
import {app} from "@/service/firebase";

const db = getFirestore(app);
const collectionRef = collection(db, "house_info");

export default function Home() {
  const [postData, setPostData] = useState({
    created_at: new Date(),
    started_at: "",
    deadline_at: "",
    address: "",
    category: "",
    deposit: 0,
    rent: 0,
    area: 0,
    url: "",
    exposure: true,
    detail: "",
  });
  const [startedAt, setStartedAt] = useState("");
  const [deadlineAt, setDeadlineAt] = useState("");

  const handleInputChange = (e: any) => {
    const {name, value} = e.target;

    const newValue = name === "detail" ? value.split("\n") : value;
    setPostData((prevState) => ({
      ...prevState,
      [name]: newValue,
    }));
  };

  const handleStartedAtChange = (e: any) => {
    const {value} = e.target;
    setStartedAt(value);
    setPostData((prevState) => ({...prevState, started_at: value}));
  };

  const handleDeadlineAtChange = (e: any) => {
    const {value} = e.target;
    setDeadlineAt(value);
    setPostData((prevState) => ({...prevState, deadline_at: value}));
  };

  const handleAddPost = async () => {
    await addDoc(collectionRef, postData);
    try {
      setPostData({
        created_at: new Date(),
        started_at: "",
        deadline_at: "",
        address: "",
        category: "",
        deposit: 0,
        rent: 0,
        area: 0,
        url: "",
        exposure: true,
        detail: "",
      });
    } catch (e) {
      console.error("Error adding document: ", e);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col space-y-4">
        <div>
          <label htmlFor="address" className="block font-medium mb-1">
            Address:
          </label>
          <input
            type="text"
            name="address"
            value={postData.address}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="category" className="block font-medium mb-1">
            Category:
          </label>
          <input
            type="text"
            name="category"
            value={postData.category}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="depoit" className="block font-medium mb-1">
            Deposit:
          </label>
          <input
            type="text"
            name="deposit"
            value={postData.deposit}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="rent" className="block font-medium mb-1">
            Rent:
          </label>
          <input
            type="text"
            name="rent"
            value={postData.rent}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="area" className="block font-medium mb-1">
            Area:
          </label>
          <input
            type="text"
            name="area"
            value={postData.area}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="url" className="block font-medium mb-1">
            URL:
          </label>
          <input
            type="text"
            name="url"
            value={postData.url}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="detail" className="block font-medium mb-1">
            Detail:
          </label>
          <textarea
            name="detail"
            value={postData.detail}
            onChange={handleInputChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          ></textarea>
        </div>
        <div>
          <label htmlFor="started_at" className="block font-medium mb-1">
            Started at:
          </label>
          <input
            type="datetime-local"
            id="started_at"
            name="started_at"
            value={startedAt}
            onChange={handleStartedAtChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label htmlFor="deadline_at" className="block font-medium mb-1">
            Deadline at:
          </label>
          <input
            type="datetime-local"
            id="deadline_at"
            name="deadline_at"
            value={deadlineAt}
            onChange={handleDeadlineAtChange}
            className="w-full border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <button
          onClick={handleAddPost}
          className="bg-indigo-500 text-white py-2 px-4 rounded hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-opacity-50"
        >
          Add Post
        </button>
      </div>
    </>
  );
}
